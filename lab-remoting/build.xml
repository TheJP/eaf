<?xml version="1.0"?>
<!DOCTYPE project>

<project name="lab-remoting-2015" default="compile" basedir="." xmlns:artifact="urn:maven-artifact-ant">
	<property file="build.properties" />

	<property name="root.dir" value="${basedir}" />

	<!-- The build properties -->
	<property name="build.classes.dir" value="${build.dir}" />

	<!-- initialize maven ant tasks -->
	<path id="maven-ant-tasks.classpath" path="${lib.dir}/maven-ant-tasks-2.1.0.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" 
		classpathref="maven-ant-tasks.classpath"
	/>	

	<!-- The build classpath -->
	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="prepare">
		<mkdir dir="${build.classes.dir}" />
	</target>

	<!-- setup CLASSPATHs based on information found in the pom file -->
	<target name="mvn-init">
		<artifact:localRepository id="local.repository" path="${maven.repo.local}"/>
		<artifact:pom file="pom.xml" id="maven.project" />

	    <artifact:dependencies pathId="compile.classpath" filesetId="compile.fileset" useScope="compile">
			<pom refid="maven.project"/>
			<localRepository refid="local.repository"/>
	    </artifact:dependencies>

		<artifact:dependencies pathId="test.classpath" filesetId="test.fileset" useScope="test">
			<pom refid="maven.project"/>
			<localRepository refid="local.repository"/>
		</artifact:dependencies>
		
		<artifact:dependencies pathId="runtime.classpath" filesetId="runtime.fileset" useScope="runtime">
			<pom refid="maven.project"/>
			<localRepository refid="local.repository"/>
		</artifact:dependencies>
	</target>	

	<target name="compile" depends="prepare, mvn-init" description="Compile the sources">
		<javac srcdir="${src.dir}" 
			destdir="${build.classes.dir}" 
			debug="on"
			deprecation="on"
			optimize="off" 
			includeAntRuntime="false" 
		>
			<classpath>
				<path refid="compile.classpath" />
				<path refid="build.classpath" />
				<path refid="test.classpath" />
			</classpath>
		</javac>
					
		<copy todir="${build.classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${src.dir}">
				<include name="**/*.xml" />
			</fileset>
		</copy>
	</target>
	
	<macrodef name="war-exploded">
	    <attribute name="deployDir" default="target/${name}"/>
	    <sequential>
	        <copy todir="@{deployDir}">
	            <fileset dir="src/main/webapp"/>
	        </copy>	
	        <copy todir="@{deployDir}/WEB-INF/classes">
	            <fileset dir="target/classes"/>
	        </copy>
	        <copy todir="@{deployDir}/WEB-INF/lib" flatten="true">
	            <fileset refid="runtime.fileset"/>
	        </copy>
	    </sequential>
	</macrodef>         
	 
	<target name="war-exploded" depends="compile">
	    <war-exploded/>
	</target>
	 
	<target name="war" depends="war-exploded">
	    <zip destfile="target/${name}.war" basedir="target/${name}"/>
	</target>


	<target name="zip" depends="prepare" description="Create zip file of the whole project">
		<zip destfile="../${name}-${version}.zip">
			<zipfileset dir="${basedir}" prefix="${name}" 
				excludes=".classpath, .project, .settings/**, target/**, build/**, **/*.log">
			</zipfileset>
		</zip>
	</target>

	<target name="clean" description="Clean generated stuff">
		<delete dir="${build.dir}" />
		<delete dir="target/${name}" />
		<delete file="target/${name}.war" />
	</target>

	<target name="war.deploy" depends="war" description="install war file" >
		 <copy file="target/${name}.war" todir="${webapps.dir}"/>
	</target>
	
	<target name="war.undeploy" description="uninstall war file" >
		<delete file="${webapps.dir}/${name}.war"/>
	</target>

</project>